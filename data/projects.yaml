- title: Simple Player

  link: https://vk.com/club39765429

  description: |
    Music player for Windows, plays local files or audios from VK.com.
    My main project on Delphi, I've learned a lot of things
    and was trying to make a good design (via FireMonkey).
    It was hard to make a good (in my taste) visualizer.

  technologies:
    - Delphi (FireMonkey)
    - VK API

  years: 2011â€“2012


- title: Soundly

  link: https://vk.com/club41593729

  description: |
    Reincornation of Simple Player as web service (site).
    Plays local files (selected via browser) and integratation with VK (again).
    Without visualizer, sadly.
    But it worked with VK Audios faster (especially search, global too), than VK itself.
    Util VK has closed their Audio API for monetization.
    Plain JavaScript in the single file about 1500 LOC,
    I didn't think about architecture and third-party tools (libraries) at this time.

  technologies:
    - JavaScript
    - VK API

  years: 2013â€“2014


- title: BCLeaner

  description: |
    System for detecting bots among Twitter followers.

    In these times there were many bots in Twitter and popular people cheated followers count.
    But then declaring that you have no bots among your followers
    and you're honest became fashinable. So, there was a request to make an automated tool (service)
    for detecting bots among your followers and ban them
    (it was the force unfollow in this time, as I remember).
    Then you could declare that you're "clean" and "honest" too.

    I was trying to make such system for money. Bots recognition algorythm was pretty good,
    but I have not finalize this project because I was fired up for fail
    in another parallel non-related project in the same company.

  technologies:
    - PHP
    - Twitter API

  years: 2013


- title: RDI

  link: http://www.rdi.ru/

  description: |
    Site of the development company (in Moscow region).
    My only experience of changing layout (HTML, CSS, PNG)
    by just a single JPEG file with target design.

  technologies:
    - PHP
    - 1C-Bitrix
    - GIMP
    - Basecamp

  years: 2014â€“2015


- title: Icons of the World

  description: |
    Presentation site of the same named books. Home page contained almost full-screen Google Maps
    with custom markers, pop-ups and clusters.
    It was hard to make custom optimizations of requests to database bypassing WordPress engine.

  technologies:
    - PHP
    - WordPress
    - MySQL
    - CSS
    - JavaScript
    - Google Maps API
    - Basecamp

  years: 2014â€“2015


- title: KEY Group

  link: https://web.archive.org/web/20150801125104/http://key-g.com/

  description: |
    It was a weird experience of making the layout with diagonal sections. Adaptive!
    I've made it via CSS `transform` finally, although there were many different tries
    with other approaches. Also it was my practice of making SVG icons via font characters.
    I've learned a lot of CSS with this project.

  technologies:
    - PHP
    - MySQL
    - CSS
    - JavaScript
    - BitBucket
    - Basecamp

  years: 2014â€“2015


- title: GetWiFi

  description: |
    Dashboard for Wi-Fi captive portals among cafes, hotels, etc.

    At that time I knew PHP at high level and saw its disadvantages for me.
    So, I wanted to learn any new programming language with more consistency
    and better potential for project files structure.
    Finally I was choosing between Python and Ruby,
    and I like (more consistent) OOP approach of Ruby, `snake_case` and its philosophy.

    This project was a first serious try to make it with Ruby.
    I didn't (and don't, but already more tolerate to) Ruby on Rails, its approach and "magic",
    so I've developed this project via [Sinatra](http://sinatrarb.com/), but was a big mistake
    because of controllers architecture and it became the impulse to create
    [Flame framework](https://github.com/AlexWayfer/flame)).

    Although there was nice (in my opinion) horizontal-nested simple UI,
    and pretty good database architecture.

  technologies:
    - MikroTik firmware and configs
    - Wi-Fi Captive Portal
    - Ruby
    - Sinatra
    - MySQL
    - DataMapper (abandoned ORM)
    - JavaScript
    - BitBucket
    - Basecamp

  years: 2015


- title: GetTransfer

  link: https://gettransfer.com/

  description: |
    People transfers aggregator, between passengers and carriers.
    It's pretty popular and successful.

    The first project written via [Flame](https://github.com/AlexWayfer/flame).

    There was a lot of work with:

    *   SCSS architecture;

    *   JavaScript plugins and custom code;

    *   database architecture and optimizations;

    *   form data validations;

    *   client-side and server-side tight integration with Google Maps API;

    *   integrations with a lot of payment systems, like PayPal or Platron;

    *   translations via Crowdin and Gengo;

    *   currencies exhanges;

    *   timezones and time convertations;

    *   comfortable dashboards for different types of users, from managers to client;

    *   aggregated data exports in different formats;

    *   forecasts algorythms for prices.

    In all time of working on this project I was leading a team of up to 10 people,
    they all were different and many of them were cool.
    I've got a lot of experience in leading and talking with people,
    especially reviewing their code. ðŸ˜¬ Now I'm more calm and respectful.

    Honestly, I don't like what project became after my leave.

  technologies:
    - Ruby
    - Flame
    - PostgreSQL
    - Sequel
    - ERB
    - JavaScript
    - SCSS
    - Google Maps API
    - GeoNames API
    - PayPal API
    - Platron API
    - Crowdin
    - Money gem
    - Sentry
    - GitLab
    - Basecamp

  years: 2015â€“2017


- title: GetTransport

  link: http://gettransport.com/

  description: |
    Cargo transportation aggregator, between shippers and carriers.
    Another project written via [Flame](https://github.com/AlexWayfer/flame).

    I've tried to make this project taking into account my architecture errors of GetTransfer.
    So, it's using a next version of Flame, 5, with a lot of improvements.
    Also we have started to use service objects instead of fat controllers and models.
    Then I service objects turned into [Formalism](https://github.com/AlexWayfer/formalism) forms.

    This project was pretty similar to GetTransfer, so I was working with similar technologies,
    sometimes with a better or cleaner approach.

  technologies:
    - Ruby
    - Flame
    - PostgreSQL
    - Formalism
    - ERB
    - JavaScript
    - SCSS
    - Google Maps API
    - GeoNames API
    - PayPal API
    - Platron API
    - Crowdin
    - Money gem
    - Sentry
    - GitLab
    - Basecamp

  years: 2017-2020


- title: Stream Assistant

  description: |
    Bot for assisting broadcaster and moderators in stream chats.
    It answers to frequently asked questions.
    Works via regular expressions.
    Right now only in Russian, but other languages in plans.

    There is still no site for it, sadly, because of [Puma's issue](https://github.com/puma/puma/issues/2319).

    I've integrated it with YouTube at first, via [official Google's gem](https://github.com/googleapis/google-api-ruby-client),
    then I've integrated it with Twitch via gem for API and another gem for chat.
    They're pretty abandoned, there are PRs for them:
    *   https://github.com/dustinlakin/twitch-rb/pull/34
    *   https://github.com/EnotPoloskun/twitch-chat/pull/6
    Also I've created a separated gem for auithentication: [`twitch_oauth2`](https://github.com/AlexWayfer/twitch_oauth2).

    Also it has integrations with third-party services, like Steam, there are PRs:
    *   https://github.com/bhaberer/steam-api/pull/10

    For time difference I was trying many gems and chose [`moments`](https://github.com/excpt/moments),
    but [I've made some improvements for it](https://github.com/excpt/moments/pulls?q=is%3Apr+author%3AAlexWayfer+is%3Aclosed)
    (it looks maintained, PRs were merged).

  technologies:
    - Ruby
    - PostgreSQL
    - YouTube API
    - Twitch API
    - Twitch IRC
    - Steam API
    - GitLab

  years: 2018-2020


- title: Stream Timer

  link: https://github.com/AlexWayfer/stream_timer

  description: |
    Simple application with configuration window (page)
    and a page with configured timer for streaming application, like [OBS](https://obsproject.com/).

    Useful for scenes of AFK (stream pauses), just configurable time countdown.

    Currently it built only via Vue.js and static, but I have plans to make
    a complete web-application via Flame, database (configuration saving) and web-sockets.
    But there is still [the issue of Puma](https://github.com/puma/puma/issues/2319).

  technologies:
    - JavaScript
    - Vue.js
    - GitHub

  years: 2020


- title: Who2Follow

  description: |
    A try to create my own algorythm of follows/friends/etc. suggestions.
    Platform-independent, but Twitch and Twitter are first in the plan
    (just because they're more important for me).

    Core (algorythm in a Ruby gem) and CLI tool are ready, but there is no site version
    still because of [the Puma's issue](https://github.com/puma/puma/issues/2319).

  technologies:
    - Ruby
    - Clamp
    - Twitch API
    - GitLab

  years: 2020
