os_setup: &os_setup
  container:
    image: debian
  os_setup_script:
    - apt update && apt upgrade -y && apt install curl git make gcc -y

    - echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bashrc
    - echo 'eval "$(rbenv init -)"' >> ~/.bashrc

    - echo 'export PATH="$HOME/.nodenv/bin:$PATH"' >> ~/.bashrc
    - echo 'eval "$(nodenv init -)"' >> ~/.bashrc

rbenv_cache: &rbenv_cache
  rbenv_cache:
    folder: $HOME/.rbenv
    fingerprint_script:
      - source ~/.bashrc
      - cat .cirrus.yaml
      - echo $CIRRUS_OS
      - cat .ruby-version
      ## https://github.com/cirruslabs/cirrus-ci-docs/issues/379
      - echo cache_validation_work-around-1
    populate_script:
      - git clone https://github.com/rbenv/rbenv.git ~/.rbenv

      - source ~/.bashrc

      ## https://github.com/rbenv/ruby-build#installation
      - mkdir -p "$(rbenv root)"/plugins
      - git clone https://github.com/rbenv/ruby-build.git "$(rbenv root)"/plugins/ruby-build

      - rbenv install -s

nodenv_cache: &nodenv_cache
  nodenv_cache:
    folder: $HOME/.nodenv
    fingerprint_script:
      - source ~/.bashrc
      - cat .cirrus.yaml
      - echo $CIRRUS_OS
      - cat .node-version
      ## https://github.com/cirruslabs/cirrus-ci-docs/issues/379
      - echo cache_validation_work-around-1
    populate_script:
      - git clone https://github.com/nodenv/nodenv.git ~/.nodenv

      - source ~/.bashrc

      ## https://github.com/nodenv/node-build#installation
      - mkdir -p "$(nodenv root)"/plugins
      - git clone https://github.com/nodenv/node-build.git "$(nodenv root)"/plugins/node-build

      - nodenv install -s

bundle_cache: &bundle_cache
  bundle_cache:
    folder: /usr/local/bundle
    fingerprint_script:
      - source ~/.bashrc
      - echo $CIRRUS_OS
      - ruby -v
      - cat Gemfile.lock
  install_script:
    - gem install bundler
    - bundle install

node_modules_cache: &node_modules_cache
  node_modules_cache:
    folder: node_modules
    fingerprint_script:
      - source ~/.bashrc
      - echo $CIRRUS_OS
      - node -v
      - cat package.json
  install_script: npm install


remark_task:
  <<: *os_setup

  always:
    <<: *nodenv_cache

  <<: *node_modules_cache

  lint_script:
    - source ~/.bashrc
    - npm run lint:markdown

  only_if: ($CIRRUS_BRANCH == 'master') ||
    changesInclude(
      '.cirrus.yaml', '.gitignore', 'package.json', 'package-lock.json', '.remarkrc.yaml', '**.md'
    )

stylelint_task:
  <<: *os_setup

  always:
    <<: *nodenv_cache

  <<: *node_modules_cache

  lint_script:
    - source ~/.bashrc
    - npm run lint:styles

  only_if: ($CIRRUS_BRANCH == 'master') ||
    changesInclude(
      '.cirrus.yaml', '.gitignore', 'package.json', 'package-lock.json', 'browserslist',
      '.stylelintrc.yaml', 'assets/styles/**'
    )

eslint_task:
  <<: *os_setup

  always:
    <<: *nodenv_cache

  <<: *node_modules_cache

  lint_script:
    - source ~/.bashrc
    - npm run lint:scripts

  only_if: ($CIRRUS_BRANCH == 'master') ||
    changesInclude(
      '.cirrus.yaml', '.gitignore', 'package.json', 'package-lock.json', 'browserslist',
      '.eslintrc.yaml', '.eslintignore', 'assets/scripts/**'
    )

rubocop_task:
  <<: *os_setup

  always:
    <<: *rbenv_cache

    rubocop_artifacts:
      path: rubocop.json
      type: text/json
      format: rubocop

  <<: *bundle_cache

  lint_script:
    - source ~/.bashrc
    - bundle exec rubocop --format=json --out=rubocop.json

  only_if: ($CIRRUS_BRANCH == 'master') ||
    changesInclude(
      '.cirrus.yaml', '.gitignore', 'Gemfile', 'Gemfile.lock', '.rubocop.yml', '**.rb'
    )
