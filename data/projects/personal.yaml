- title: Stream Timer

  link: https://streamtimer.app/

  begin_date: February 2020
  end_date: now

  description: |
    Application with configuring timer for streaming application,
    like <%= external_link 'OBS', 'https://obsproject.com/' %>.

    Useful for AFK (stream pauses), some events (like rocket launches or draws), etc.

    Previously it was built only via Vue.js and static, but I've made a complete web-application
    via Flame and database (configuration and users saving).

  technologies:
    Back-end:
      - Ruby
      - Flame
      - PostgreSQL
      - Sequel
      - Formalism
      - ERB
    Front-end:
      - JavaScript
      - <del>Vue.js</del>
      - SCSS
      - IcoMoon
    Code management:
      - GitHub


- title: Who2Follow

  begin_date: October 2019
  end_date: now

  description: |
    A try to create my own algorythm of follows/friends/etc. suggestions.
    Platform-independent, but Twitch and Twitter are first in the plan
    (just because they're more important for me).

    Core (algorythm in a Ruby gem) and CLI tool are ready, site will be soon.

  technologies:
    Back-end:
      - Ruby
      - Clamp
      - Twitch API
    Tests:
      - RSpec
    Code management:
      - GitLab


- title: Stream Assistant

  begin_date: October 2018
  end_date: now

  description: |
    Bot for assisting broadcaster and moderators in stream chats.
    It answers to frequently asked questions.
    Works via regular expressions.
    Right now only in Russian, but other languages in plans.

    I've integrated it with YouTube at first, via <%= external_link "official Google's gem", 'https://github.com/googleapis/google-api-ruby-client' %>,
    then I've integrated it with Twitch via gem for API and another gem for chat.
    They're pretty abandoned, there are PRs for them:

    *   <%= external_link 'PR to `twitch-rb`', 'https://github.com/dustinlakin/twitch-rb/pull/34' %>
    *   <%= external_link 'PR to `twitch-chat`', 'https://github.com/EnotPoloskun/twitch-chat/pull/6' %>

    Also I've created a separated gem for auithentication: <%= external_link '`twitch_oauth2`', 'https://github.com/AlexWayfer/twitch_oauth2' %>.

    And since Twitch moved from v5 to v6 API, I've contributed
    to <%= external_link '`twitch-api` gem', 'https://github.com/mauricew/ruby-twitch-api' %>
    and became maintainer of it.

    Also it has integrations with third-party services, like Steam,
    I've created <%= external_link 'a PR to the gem', 'https://github.com/bhaberer/steam-api/pull/10' %> with improvements.

    For time difference I was trying many gems and chose <%= external_link '`moments`', 'https://github.com/excpt/moments' %>,
    but <%= external_link "I've made some improvements for it", 'https://github.com/excpt/moments/pulls?q=is%3Apr+author%3AAlexWayfer+is%3Aclosed' %>
    (it looks maintained, PRs were merged).

    Site with description and dashboard for streamers will be soon.

  technologies:
    Back-end:
      - Ruby
      - PostgreSQL
      - Sequel
    Integrations:
      - YouTube API
      - Twitch API
      - Twitch IRC
      - Steam API
    Tests:
      - RSpec
    Code management:
      - GitLab
    Hosting:
      - Scaleway
      - Hetzner

- title: Soundly

  link: https://vk.com/club41593729

  begin_date: February 2013
  end_date: February 2014

  description: |
    Reincornation of Simple Player as web service (site).
    Plays local files (selected via browser) and integratation with VK (again).
    Without visualizer, sadly.
    But it worked with VK Audios faster (especially search, global too), than VK itself.
    Util VK has closed their Audio API for monetization.
    Single file of plain JavaScript with about 1500 LOC:
    I didn't think about architecture and third-party tools (libraries) at this time.

  technologies:
    Front-end:
      - JavaScript
    Integrations:
      - VK API


- title: Simple Player

  link: https://vk.com/club39765429

  begin_date: June 2011
  end_date: July 2012

  description: |
    Music player for Windows, plays local files or audios from VK.com.
    My main project on Delphi, I've learned a lot of things
    and was trying to make a good design (via FireMonkey).
    It was hard to make a good (in my taste) visualizer.

  technologies:
    General:
      - Delphi (FireMonkey)
    Integrations:
      - VK API
